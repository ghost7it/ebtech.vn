@model Entities.ViewModels.ChangePasswordViewModel
@{
    ViewBag.Title = "Đổi mật khẩu";
    Layout = "~/Views/Shared/_DetailLayout.cshtml";
    bool success = false;
    if (ViewBag.Success != null) { success = (bool)ViewBag.Success; }
}

<div class="content">
    <div class="left_detail">
        <h2>Đổi mật khẩu</h2>
        <div class="clear"></div>
        <div class="row">
            <div class="col-md-12 form">
                @if (success)
                {
                    <div>
                        Quí vị đã đổi mật khẩu thành công!
                        <br />Mật khẩu mới sẽ có hiệu lực trong lần đăng nhập sau.
                    </div>
                    <p>Quí vị bấm <a href="@Url.RouteUrl("FrontEndProfileDetail")">vào đây</a> để xem lại hồ sơ!</p>
                }
                else
                {
                    using (Html.BeginForm("ChangePassword", "Profile", FormMethod.Post, new { @class = "login-form form-horizontal" }))
                    {
                        <div class="form-body">
                            <div class="note note-success">
                                <p>Quí vị vui lòng xác nhận lại mật khẩu cũ và nhập mật khẩu mới để đổi.</p>
                            </div>
                            @Html.AntiForgeryToken()
                            @if (!ViewData.ModelState.IsValid)
                            {
                                <div class="alert alert-danger">
                                    <button class="close" data-dismiss="alert"></button>
                                    @Html.ValidationSummary(true)
                                </div>
                            }
                            <div class="form-group">
                                @Html.LabelFor(model => model.OldPassword, new { @class = "col-md-3 control-label" })
                                <div class="col-md-4">
                                    @Html.PasswordFor(model => model.OldPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.OldPassword)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.NewPassword, new { @class = "col-md-3 control-label" })
                                <div class="col-md-4">
                                    @Html.PasswordFor(model => model.NewPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.NewPassword)
                                </div>
                            </div>
                            <div class="form-group">
                                @Html.LabelFor(model => model.ConfirmPassword, new { @class = "col-md-3 control-label" })
                                <div class="col-md-4">
                                    @Html.PasswordFor(model => model.ConfirmPassword, new { @class = "form-control" })
                                    @Html.ValidationMessageFor(model => model.ConfirmPassword)
                                </div>
                            </div>
                        </div>
                        <div class="form-actions">
                            <div class="row">
                                <div class="col-md-offset-3 col-md-4">
                                    <button type="submit" class="btn green-haze pull-right">
                                        Ghi nhận <i class="m-icon-swapright m-icon-white"></i>
                                    </button>
                                </div>
                            </div>
                        </div>
                    }
                }
            </div>
        </div>
    </div>
    <div class="right_detail">
        @{Html.RenderAction("MostViewed2", "Shared");}
    </div>
    <div class="clear"></div>
</div>
@section styles{
    @Styles.Render("~/Content/bootstrap")
    @Styles.Render("~/Content/components")
    @Styles.Render("~/Content/plugins")
    @Styles.Render("~/Content/font-awesome")
    @Styles.Render("~/Content/custom")
}
@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
