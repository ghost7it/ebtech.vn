@using Entities.Models;
@using Entities.Enums;
@{
    ViewBag.Title = "Danh sách hồ sơ cựu sinh viên";
    Layout = "~/Areas/Management/Views/Shared/_ManagementLayout.cshtml";
    var canCreate = RoleHelper.CheckPermission(ModuleEnum.Profile, ActionEnum.Create);
}
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <i class="fa fa-home"></i>
            <a href="@Url.RouteUrl("ManagementHome")">Trang chủ</a>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <a href="javascript:void(0);">Danh sách hồ sơ cựu sinh viên</a>
        </li>
    </ul>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="portlet light">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-check-square font-green-sharp bold"></i>
                    <span class="caption-subject font-green-sharp bold ">Danh sách hồ sơ cựu sinh viên</span>
                </div>
                @if (canCreate)
                {
                    <div class="actions">
                        <a href="@Url.RouteUrl("ProfileCreate")" class="btn btn-sm green"><i class="fa fa-plus"></i> Nhập hồ sơ mới</a>
                    </div>
                }
            </div>
            <div class="portlet-body">
                <div class="table-container">
                    @*<div class="table-actions-wrapper">
                            <button class="btn btn-sm blue table-group-action-PendingPublish"><i class="fa fa-check"></i> Gửi xuất bản</button>
                            <button class="btn btn-sm yellow-casablanca table-group-action-RecentlyAdded display-hide"><i class="fa fa-edit"></i> Biên tập lại</button>
                            <button class="btn btn-sm red-flamingo table-group-action-Delete"><i class="fa fa-trash-o"></i> Xóa</button>
                            <span></span>
                        </div>*@
                    <div class="table-actions-2-wrapper">
                        Xem hồ sơ&nbsp;&nbsp;<select class=" form-control input-inline input-small input-sm object-filter">
                            <option value="1">Mới đăng ký/Mới nhập</option>
                            <option value="2">Đã duyệt</option>
                            <option value="3">Không được duyệt</option>
                        </select>&nbsp;&nbsp;&nbsp;
                    </div>
                    <table class="table table-striped table-bordered table-hover" id="datatable_ajax_source">
                        <thead>
                            <tr role="row" class="heading">
                                <th class="table-checkbox">
                                    <input type="checkbox" class="group-checkable" />
                                </th>
                                <th>
                                    Họ và tên
                                </th>
                                <th>
                                    Ngày sinh
                                </th>
                                <th>
                                    Địa chỉ email
                                </th>
                                <th>
                                    Điện thoại
                                </th>
                                <th>
                                    Ngày tạo
                                </th>
                                <th>Hành động</th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@section Styles{
    @Styles.Render("~/Content/adminv1/select2", "~/Content/adminv1/datatable")
}
@section Scripts {
    @Scripts.Render("~/bundles/adminv1/select2", "~/bundles/adminv1/datatable")
    @Scripts.Render("~/bundles/adminv1/datatable-ajax-source")
}
@section Scripts2 {
    <script type="text/javascript">
        var Profile = function () {
            var handleProfile = function () {
                var grid = new DatatableAjaxSource();
                grid.init({
                    src: $("#datatable_ajax_source"),
                    onSuccess: function (grid) {
                        // hành động khi tải xong dữ liệu
                    },
                    onError: function (grid) {
                        // hành động khi tải dữ liệu bị lỗi
                    },
                    dataTable: {
                        "ajax": {
                            "url": '@Url.RouteUrl("ProfileGetProfilesJson", new { status = 1 })',
                        },
                        "columnDefs": [{
                            "targets": -1,
                            "data": null,
                            "render": function (data, type, full) {
                                return '<a class="btn btn-xs blue " href="' + ('@Url.RouteUrl("ProfileDetail", new { id = "objectId" })').replace("objectId", data.Id) + '"><i class="fa fa-eye"></i> Xem chi tiết</a>';
                                //var sel = $('select.object-filter').val();
                                //switch (sel) {
                                //    case '1':
                                //        return '<a class="btn btn-xs blue PendingPublish" data-objectid="' + data.Id + '" href="#"><i class="fa fa-check"></i> Gửi xuất bản</a>' +
                                //            '<a class="btn default btn-xs red-flamingo Delete" data-objectid="' + data.Id + '" href="#"><i class="fa fa-trash-o"></i> Xóa</a>';
                                //        break;
                                //    case '2':
                                //        return '<a class="btn btn-xs red-flamingo RecentlyAdded" data-objectid="' + data.Id + '" href="#"><i class="fa fa-edit"></i> Biên tập lại</a>';
                                //        break;
                                //    case '3':
                                //        return '<a class="btn btn-xs blue RecentlyAdded" data-objectid="' + data.Id + '" href="#"><i class="fa fa-edit"></i> Biên tập lại</a>' +
                                //            '<a class="btn default btn-xs red-flamingo Delete" data-objectid="' + data.Id + '" href="#"><i class="fa fa-trash-o"></i> Xóa</a>';
                                //        break;
                                //    default:
                                //        return '';
                                //}
                            },
                        }],
                        "columns": [
                            {
                                "searchable": false,
                                "orderable": false,
                                "data": "Id",
                                "render": function (data, type, full) {
                                    return '<input type="checkbox" value="' + data + '" class="checkboxes">';
                                }
                            },
                            {
                                "searchable": true,
                                "orderable": true,
                                "data": null,
                                "render": function (data, type, full) {
                                    return '<a href="' + ('@Url.RouteUrl("ProfileDetail", new { id = "objectId" })').replace("objectId", data.Id) + '">' + data.Name + '</a>';
                                    @*var sel = $('select.object-filter').val();
                                    if (sel == '1')
                                        return '<a href="' + ('@Url.RouteUrl("ArticleUpdate", new { id = "objectId" })').replace("objectId", data.Id) + '">' + data.Name + '</a>';
                                    else
                                        return '<a href="' + ('@Url.RouteUrl("ArticleDetailModal", new { id = "objectId" })').replace("objectId", data.Id) + '" data-target="#ajaxmodal" data-toggle="modal">' + data.Name + '</a>'*@
                                }
                            },
                        { data: "DateOfBirth" },
                        { data: "Email" },
                        { data: "CellPhone" },
                        { data: "CreateDate" },
                        { data: null }
                        ],
                        "order": [
                            [1, "desc"]
                        ] // ép sắp xếp theo cột thứ 2
                    }
                });
                grid.getTableWrapper().on('change', '.object-filter', function (e) {
                    var sel = $(this).val();
                    e.preventDefault();
                    grid.setAjaxParam("objectStatus", $(this).val());
                    grid.getDataTable().ajax.reload();
                    grid.clearAjaxParams();
                    //switch (sel) {
                    //    case '1':
                    //        {
                    //            $('.table-group-action-PendingPublish').removeClass('display-hide');
                    //            $('.table-group-action-RecentlyAdded').addClass('display-hide');
                    //            $('.table-group-action-Delete').removeClass('display-hide');
                    //        }
                    //        break;
                    //    case '2':
                    //        {
                    //            $('.table-group-action-PendingPublish').addClass('display-hide');
                    //            $('.table-group-action-RecentlyAdded').removeClass('display-hide');
                    //            $('.table-group-action-Delete').addClass('display-hide');
                    //        }
                    //        break;
                    //    case '3':
                    //        {
                    //            $('.table-group-action-PendingPublish').addClass('display-hide');
                    //            $('.table-group-action-RecentlyAdded').removeClass('display-hide');
                    //            $('.table-group-action-Delete').removeClass('display-hide');
                    //        }
                    //        break;
                    //}
                });
                @*//Gửi xuất bản nhiều hồ sơ
            grid.getTableWrapper().on('click', '.table-group-action-PendingPublish', function (e) {
                e.preventDefault();
                if (grid.getSelectedRowsCount() > 0) {
                    SetArticleStatus(grid.getSelectedRows(), 2);
                } else if (grid.getSelectedRowsCount() === 0) {
                    showNoty('Chưa có bản ghi nào được chọn!', 'error', 'center', 5000);
                }
            });
            //Xóa nhiều hồ sơ
            grid.getTableWrapper().on('click', '.table-group-action-Delete', function (e) {
                e.preventDefault();
                if (grid.getSelectedRowsCount() > 0) {
                    if (confirm('Bạn có chắc chắn muốn xóa không?')) {
                        DeleteArticle(grid.getSelectedRows());
                    }
                } else if (grid.getSelectedRowsCount() === 0) {
                    showNoty('Chưa có bản ghi nào được chọn!', 'error', 'center', 5000);
                }
            });
            //Biên tập lại nhiều hồ sơ
            grid.getTableWrapper().on('click', '.table-group-action-RecentlyAdded', function (e) {
                e.preventDefault();
                if (grid.getSelectedRowsCount() > 0) {
                    SetArticleStatus(grid.getSelectedRows(), 1)
                } else if (grid.getSelectedRowsCount() === 0) {
                    showNoty('Chưa có bản ghi nào được chọn!', 'error', 'center', 5000);
                }
            });
            //Gửi xuất bản 1 hồ sơ
            grid.getTableWrapper().on('click', '.PendingPublish', function (e) {
                e.preventDefault();
                var ids = $(this).attr('data-objectid');
                SetArticleStatus(ids, 2);
            });
            //Biên tập lại 1 hồ sơ
            grid.getTableWrapper().on('click', '.RecentlyAdded', function (e) {
                e.preventDefault();
                var ids = $(this).attr('data-objectid');
                SetArticleStatus(ids, 1);
            });
            //Xóa 1 hồ sơ
            grid.getTableWrapper().on('click', '.Delete', function (e) {
                e.preventDefault();
                if (confirm('Bạn có chắc chắn muốn xóa không?')) {
                    var ids = $(this).attr('data-objectid');
                    DeleteArticle(ids);
                }
            });
            //Hàm đổi trạng thái hồ sơ
            var SetArticleStatus = function (ids, status) {
                AdminVersionOne.blockUI({
                    message: 'Vui lòng đợi!',
                    overlayColor: 'none',
                    cenrerY: true,
                    boxed: true
                });
                var $url = ('@Url.RouteUrl("ArticleSetArticleStatus", new { ids = "objectIds", status = "objectStatus" })').replace("objectIds", ids).replace("objectStatus", status);
                $.ajax({
                    type: 'POST',
                    cache: false,
                    async: true,
                    url: $url,
                    dataType: 'json',
                    success: function (result) {
                        if (result.success) {
                            showNoty(result.message, 'success', 'center', 5000);
                        }
                        else
                            showNoty(result.message, 'error', 'center', 5000);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        showNoty(errorThrown, 'error', 'center', 5000);
                    },
                    complete: function (result) {
                        grid.getDataTable().ajax.reload();
                        AdminVersionOne.unblockUI();
                    }
                });
                return;
            }
            //Hàm xóa hồ sơ
            var DeleteArticle = function (ids) {
                AdminVersionOne.blockUI({
                    message: 'Vui lòng đợi!',
                    overlayColor: 'none',
                    cenrerY: true,
                    boxed: true
                });
                var $url = ('@Url.RouteUrl("ArticleDeleteArticles", new { ids = "objectIds" })').replace("objectIds", ids);
                $.ajax({
                    type: 'POST',
                    cache: false,
                    async: true,
                    url: $url,
                    dataType: 'json',
                    success: function (result) {
                        if (result.success) {
                            showNoty(result.message, 'success', 'center', 5000);
                        }
                        else
                            showNoty(result.message, 'error', 'center', 5000);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        showNoty(errorThrown, 'error', 'center', 5000);
                    },
                    complete: function (result) {
                        grid.getDataTable().ajax.reload();
                        AdminVersionOne.unblockUI();
                    }
                });
                return;
            }*@
            }
            return {
                init: function () {
                    handleProfile();
                }
            };
        }();
        jQuery(document).ready(function () {
            Profile.init();

        });
    </script>
}




