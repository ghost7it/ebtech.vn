@{
    ViewBag.Title = "Xuất bản bài viết";
    Layout = "~/Areas/Management/Views/Shared/_ManagementLayout.cshtml";
}
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <i class="fa fa-home"></i>
            <a href="@Url.RouteUrl("ManagementHome")">Trang chủ</a>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <a href="javascript:void(0);">Xuất bản bài viết</a>
        </li>
    </ul>
</div>

<div class="row">
    <div class="col-md-12">
        <div class="portlet light">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-check-square-o font-green-sharp bold"></i>
                    <span class="caption-subject font-green-sharp bold ">Xuất bản bài viết</span>
                </div>
            </div>
            <div class="portlet-body">
                <div class="table-container">
                    <div class="table-actions-wrapper">
                        <button class="btn btn-sm blue table-group-action-Publish"><i class="fa fa-check"></i> Xuất bản</button>
                        <button class="btn btn-sm red-flamingo table-group-action-UnPublished display-hide"><i class="fa fa-minus-circle"></i> Hủy xuất bản</button>
                        <button class="btn btn-sm yellow-casablanca table-group-action-NotAllowed"><i class="fa fa-reply"></i> Trả biên tập</button>
                        <span></span>
                    </div>
                    <div class="table-actions-2-wrapper">
                        Xem bài viết&nbsp;&nbsp;<select class=" form-control input-inline input-small input-sm object-filter">
                            <option value="2">Chưa xuất bản</option>
                            <option value="4">Đã xuất bản</option>
                            <option value="5">Hủy xuất bản</option>
                        </select>&nbsp;&nbsp;&nbsp;
                    </div>
                    <table class="table table-striped table-bordered table-hover" id="datatable_ajax_source">
                        <thead>
                            <tr role="row" class="heading">
                                <th class="table-checkbox">
                                    <input type="checkbox" class="group-checkable" />
                                </th>
                                <th>
                                    Tiêu đề bài viết
                                </th>
                                <th>
                                    Ngày cập nhật
                                </th>
                                <th>
                                    Người biên tập
                                </th>
                                <th>
                                    Trạng thái
                                </th>
                                <th>Chuyên mục</th>
                                <th>
                                    Hành động
                                </th>
                            </tr>
                        </thead>
                        <tbody></tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>
</div>


@section Styles{
    @Styles.Render("~/Content/adminv1/select2", "~/Content/adminv1/datatable")
}
@section Scripts {
    @Scripts.Render("~/bundles/adminv1/select2", "~/bundles/adminv1/datatable")
    @Scripts.Render("~/bundles/adminv1/datatable-ajax-source")
}
@section Scripts2 {
    <script type="text/javascript">
        var Article = function () {
            var handleArticle = function () {
                var grid = new DatatableAjaxSource();
                grid.init({
                    src: $("#datatable_ajax_source"),
                    onSuccess: function (grid) {
                        // hành động khi tải xong dữ liệu
                    },
                    onError: function (grid) {
                        // hành động khi tải dữ liệu bị lỗi
                    },
                    dataTable: {
                        "ajax": {
                            "url": '@Url.RouteUrl("ArticleGetArticlesJson", new { status = 2 })',
                        },
                        "columnDefs": [{
                            "targets": -1,
                            "data": null,
                            "render": function (data, type, full) {
                                var sel = $('select.object-filter').val();
                                switch (sel) {
                                    case '2':
                                        return '<a class="btn btn-xs blue Publish" data-objectid="' + data.Id + '" href="#"><i class="fa fa-check-square-o"></i> Xuất bản</a>' +
                                            '<a class="btn default btn-xs yellow-casablanca NotAllowed" data-objectid="' + data.Id + '" href="#"><i class="fa fa-reply"></i> Trả biên tập</a>';
                                        break;
                                    case '4':
                                        return '<a class="btn btn-xs red-flamingo UnPublished" data-objectid="' + data.Id + '" href="#"><i class="fa fa-minus-circle"></i> Hủy xuất bản</a>';
                                        break;
                                    case '5':
                                        return '<a class="btn btn-xs blue Publish" data-objectid="' + data.Id + '" href="#"><i class="fa fa-check-square-o"></i> Xuất bản lại</a>' +
                                            '<a class="btn default btn-xs yellow-casablanca NotAllowed" data-objectid="' + data.Id + '" href="#"><i class="fa fa-reply"></i> Trả biên tập</a>';
                                        break;
                                    default:
                                        return '';
                                }                                
                            },
                        }],
                        "columns": [
                            {
                                "searchable": false,
                                "orderable": false,
                                "data": "Id",
                                "render": function (data, type, full) {
                                    return '<input type="checkbox" value="' + data + '" class="checkboxes">';
                                }
                            },
                            {
                                "searchable": true,
                                "orderable": true,
                                "data": null,
                                "render": function (data, type, full) {
                                        return '<a href="' + ('@Url.RouteUrl("ArticleDetailModal", new { id = "objectId" })').replace("objectId", data.Id) + '" data-target="#ajaxmodal" data-toggle="modal">' + data.Title + '</a>'
                                }
                            },
                            { data: "UpdateDate" },
                            { data: "CreateBy" },
                            { data: "Status" },
                            { data: "CategoryName" },
                            { data: null }
                        ],
                        "order": [
                            [2, "desc"]
                        ] // ép sắp xếp theo cột thứ 3
                    }
                });
                grid.getTableWrapper().on('change', '.object-filter', function (e) {
                    var sel = $(this).val();
                    e.preventDefault();
                    grid.setAjaxParam("objectStatus", $(this).val());
                    grid.getDataTable().ajax.reload();
                    grid.clearAjaxParams();
                    switch (sel) {
                        case '2':
                            {
                                $('.table-group-action-Publish').removeClass('display-hide');
                                $('.table-group-action-NotAllowed').removeClass('display-hide');
                                $('.table-group-action-UnPublished').addClass('display-hide');
                            }
                            break;
                        case '4':
                            {
                                $('.table-group-action-Publish').addClass('display-hide');
                                $('.table-group-action-NotAllowed').addClass('display-hide');
                                $('.table-group-action-UnPublished').removeClass('display-hide');
                            }
                            break;
                        case '5':
                            {
                                $('.table-group-action-Publish').removeClass('display-hide');
                                $('.table-group-action-NotAllowed').removeClass('display-hide');
                                $('.table-group-action-UnPublished').addClass('display-hide');
                            }
                            break;
                    }
                });
                //Xuất bản nhiều bản tin
                grid.getTableWrapper().on('click', '.table-group-action-Publish', function (e) {
                    e.preventDefault();
                    if (grid.getSelectedRowsCount() > 0) {
                        SetArticleStatus(grid.getSelectedRows(), 4);
                    } else if (grid.getSelectedRowsCount() === 0) {
                        showNoty('Chưa có bản ghi nào được chọn!', 'error', 'center', 5000);
                    }
                });
                //Trả biên tập nhiều bản tin
                grid.getTableWrapper().on('click', '.table-group-action-NotAllowed', function (e) {
                    e.preventDefault();
                    if (grid.getSelectedRowsCount() > 0) {
                        SetArticleStatus(grid.getSelectedRows(), 3)
                    } else if (grid.getSelectedRowsCount() === 0) {
                        showNoty('Chưa có bản ghi nào được chọn!', 'error', 'center', 5000);
                    }
                });
                //Hủy xuất bản nhiều bản tin
                grid.getTableWrapper().on('click', '.table-group-action-UnPublished', function (e) {
                    e.preventDefault();
                    if (grid.getSelectedRowsCount() > 0) {
                        SetArticleStatus(grid.getSelectedRows(), 5);
                    } else if (grid.getSelectedRowsCount() === 0) {
                        showNoty('Chưa có bản ghi nào được chọn!', 'error', 'center', 5000);
                    }
                });
                //Xuất bản 1 bản tin
                grid.getTableWrapper().on('click', '.Publish', function (e) {
                    e.preventDefault();
                    var ids = $(this).attr('data-objectid');
                    SetArticleStatus(ids, 4);
                });
                //Trả biên tập 1 bản tin
                grid.getTableWrapper().on('click', '.NotAllowed', function (e) {
                    e.preventDefault();
                    var ids = $(this).attr('data-objectid');
                    SetArticleStatus(ids, 3);
                });
                //Hủy xuất bản 1 bản tin
                grid.getTableWrapper().on('click', '.UnPublished', function (e) {
                    e.preventDefault();
                    var ids = $(this).attr('data-objectid');
                    SetArticleStatus(ids, 5);
                });
                var SetArticleStatus = function (ids, status) {
                    AdminVersionOne.blockUI({
                        message: 'Vui lòng đợi!',
                        overlayColor: 'none',
                        cenrerY: true,
                        boxed: true
                    });
                    var $url = ('@Url.RouteUrl("ArticleSetArticleStatus", new { ids = "objectIds", status = "objectStatus" })').replace("objectIds", ids).replace("objectStatus", status);
                    $.ajax({
                        type: 'POST',
                        cache: false,
                        async: true,
                        url: $url,
                        dataType: 'json',
                        success: function (result) {
                            if (result.success) {
                                showNoty(result.message, 'success', 'center', 5000);
                            }
                            else
                                showNoty(result.message, 'error', 'center', 5000);
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            showNoty(errorThrown, 'error', 'center', 5000);
                        },
                        complete: function (result) {
                            grid.getDataTable().ajax.reload();
                            AdminVersionOne.unblockUI();
                        }
                    });
                    return;
                }

            }
            return {
                init: function () {
                    handleArticle();
                }
            };
        }();
        jQuery(document).ready(function () {
            Article.init();

        });
    </script>
}