@using Entities.Models;
@using Entities.Enums;
@model Category
@{
    var canDelete = RoleHelper.CheckPermission(ModuleEnum.Category, ActionEnum.Delete);
    var canCreate = RoleHelper.CheckPermission(ModuleEnum.Category, ActionEnum.Create);
    var canUpdate = RoleHelper.CheckPermission(ModuleEnum.Category, ActionEnum.Update);
}
@using (Html.BeginForm("CreateOrUpdate", "Category", FormMethod.Post, new { @class = "form-horizontal form-create-update", @enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()
    @Html.HiddenFor(model => model.Id)
    <div class="form-actions top">
        <div class="row">
            <div class="col-md-offset-3 col-md-9">
                @if (canUpdate || canCreate)
                {
                    <button type="button" class="btn green btn-create-update"><i class="fa fa-check"></i> Ghi nhận</button>
                }
                <button type="button" class="btn default btn-reset"><i class="icon-refresh"></i>&nbsp;Hủy bỏ</button>
                @if (Model.Id != 0 && canDelete)
                {
                    <button type="button" class="btn btn-danger btn-delete"><i class="icon-trash"></i>&nbsp;Xóa</button>
                }
            </div>
        </div>
    </div>
    <div class="form-body">
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryId, new { @class = "col-md-3 control-label" })
            <div class="col-md-9">
                @Html.DropDownGroupListFor(model => model.CategoryId, (IEnumerable<GroupedSelectListItem>)ViewBag.Categories, "---Chuyên mục cha---", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.CategoryTypeId, new { @class = "col-md-3 control-label" })
            <div class="col-md-9">
                @Html.DropDownListFor(model => model.CategoryTypeId, (IEnumerable<SelectListItem>)ViewBag.CategoryTypes, "---Loại chuyên mục---", new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Name, new { @class = "col-md-3 control-label" })
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.Name, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Description, new { @class = "col-md-3 control-label" })
            <div class="col-md-9">
                @Html.TextAreaFor(model => model.Description, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.OrdinalNumber, new { @class = "col-md-3 control-label" })
            <div class="col-md-9">
                @Html.TextBoxFor(model => model.OrdinalNumber, new { @class = "form-control" })
            </div>
        </div>
        <div class="form-group">
            <div class="row">
                <div class="col-md-12">
                    @Html.LabelFor(model => model.Link, new { @class = "col-md-3 control-label" })
                    <div class="col-md-9">
                        @Html.TextBoxFor(model => model.Link, new { @class = "form-control" })
                    </div>
                </div>
            </div>
            <div class="row">
                <div class="col-md-3">

                </div>
                <div class="col-md-9">
                    <a class="btn btn-circle green btn-sm" href="@Url.RouteUrl("CategoryGetArticleToCreateLink", new { p = 1, key="" })" data-target="#ajaxmodal" data-toggle="modal"><i class="fa fa-link"></i> Tạo từ bài viết</a>
                    <a class="btn btn-circle green btn-sm" href="@Url.RouteUrl("CategoryGetCategoryToCreateLink", new { categoryId = Model.Id })" data-target="#ajaxmodal" data-toggle="modal"><i class="fa fa-link"></i> Tạo từ chuyên mục khác</a>
                </div>
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.DescriptionIcon, new { @class = "col-md-3 control-label" })
            @Html.HiddenFor(model => model.DescriptionIcon)
            <div class="col-md-9">
                <div>
                    <div class="col-md-6 thumbnail" style="height:100px;">
                        <img id="Image_Preview1" src="@(string.IsNullOrEmpty(Model.DescriptionIcon) ? "http://www.placehold.it/200x100/EFEFEF/AAAAAA&text=No+image" : Model.DescriptionIcon)" alt="" style="height:100%;" />
                    </div>
                    <div class="col-md-4" style="line-height:100px;">
                        <button type="button" class="btn btn-default select-image1"><i class="fa fa-sm"></i> Chọn ảnh</button>
                    </div>
                </div>
            </div>
        </div>
        <div style="clear:both"></div>
        <div class="form-group">
            @Html.LabelFor(model => model.SmallIcon, new { @class = "col-md-3 control-label" })
            @Html.HiddenFor(model => model.SmallIcon)
            <div class="col-md-9">
                <div>
                    <div class="col-md-6 thumbnail" style="height:100px;">
                        <img id="Image_Preview2" src="@(string.IsNullOrEmpty(Model.SmallIcon) ? "http://www.placehold.it/200x100/EFEFEF/AAAAAA&text=No+image" : Model.SmallIcon)" alt="" style="height:100%;" />
                    </div>
                    <div class="col-md-4" style="line-height:100px;">
                        <button type="button" class="btn btn-default select-image2"><i class="fa fa-sm"></i> Chọn ảnh</button>
                    </div>
                </div>
            </div>
        </div>
        <div style="clear:both"></div>
        <div class="form-group">
            @Html.LabelFor(model => model.DisplayType, new { @class = "col-md-3 control-label" })
            <div class="col-md-9">
                <select name="DisplayType" class="form-control" id="DisplayType">
                    <option @(Model.DisplayType == 1 ? " selected='selected'" : "") value="1">Kiểu 1 (Danh sách chuyên mục con kèm bài viết)</option>
                    <option @( !Model.DisplayType.HasValue || Model.DisplayType == 2 ? " selected='selected'" : "") value="2">Kiểu 2 (Danh sách bài viết)</option>
                    <option @(Model.DisplayType == 3 ? " selected='selected'" : "") value="3">Kiểu 3 (Danh sách chuyên mục con kèm mô tả)</option>
                    <option @(Model.DisplayType == 4 ? " selected='selected'" : "") value="4">Kiểu 4 (Danh sách bài viết)</option>
                    <option @(Model.DisplayType == 5 ? " selected='selected'" : "") value="5">Kiểu 5 (Danh sách chuyên mục con)</option>
                </select>
            </div>
        </div>
        <div class="form-group">
            <div class="col-md-3">
            </div>
            <div class="col-md-9">
                <div>
                    <div class="col-md-6 thumbnail" style="height:150px;">
                        @{
                string url = "/Images/AdminV1/02-thumb.jpg";
                switch (Model.DisplayType)
                {
                    case 1:
                        url = "/Images/AdminV1/01-thumb.jpg";
                        break;
                    case 2:
                        url = "/Images/AdminV1/02-thumb.jpg";
                        break;
                    case 3:
                        url = "/Images/AdminV1/03-thumb.jpg";
                        break;
                    case 4:
                        url = "/Images/AdminV1/04-thumb.jpg";
                        break;
                    case 5:
                        url = "/Images/AdminV1/05-thumb.jpg";
                        break;
                    default:
                        url = "/Images/AdminV1/02-thumb.jpg";
                        break;
                }
                        }
                        <img id="DisplayType_Preview" src="@url" alt="" style="height:100%;" class="has-popover2" data-html="true" data-content="" data-placement="left" data-title="Cách hiển thị chuyên mục" />
                    </div>
                </div>
            </div>
        </div>
        <div style="clear:both"></div>
    </div>
    <div class="form-actions">
        <div class="row">
            <div class="col-md-offset-3 col-md-9">
                @if (canUpdate || canCreate)
                {
                    <button type="button" class="btn green btn-create-update"><i class="fa fa-check"></i> Ghi nhận</button>
                }
                <button type="button" class="btn default btn-reset"><i class="icon-refresh"></i>&nbsp;Hủy bỏ</button>
                @if (Model.Id != 0 && canDelete)
                {
                    <button type="button" class="btn btn-danger btn-delete"><i class="icon-trash"></i>&nbsp;Xóa</button>
                }
            </div>
        </div>
    </div>
}
<script type="text/javascript">
    CKEDITOR.inline('Description', {
        toolbar: [
            ['Bold', 'Italic', '-', 'Link', 'Unlink'], ['FontSize', 'TextColor', 'BGColor']
        ]
    });
</script>