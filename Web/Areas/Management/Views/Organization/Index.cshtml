@using Entities.Enums;
@{
    ViewBag.Title = "Quản lý danh mục đơn vị";
    Layout = "~/Areas/Management/Views/Shared/_ManagementLayout.cshtml";
    var canDelete = RoleHelper.CheckPermission(ModuleEnum.Organization, ActionEnum.Delete);
    var canCreate = RoleHelper.CheckPermission(ModuleEnum.Organization, ActionEnum.Create);
    var canUpdate = RoleHelper.CheckPermission(ModuleEnum.Organization, ActionEnum.Update);
}
<div class="page-bar">
    <ul class="page-breadcrumb">
        <li>
            <i class="fa fa-home"></i>
            <a href="@Url.RouteUrl("ManagementHome")">Trang chủ</a>
            <i class="fa fa-angle-right"></i>
        </li>
        <li>
            <a href="javascript:void(0);">Quản lý danh mục đơn vị</a>
            @*<i class="fa fa-angle-right"></i>*@
        </li>
    </ul>
</div>
@*Bắt đầu nội dung tùy chỉnh*@
<div class="row">
    <div class="col-md-6">
        <div class="portlet blue-hoki box">
            <div class="portlet-title">
                <div class="caption">
                    <i class="icon-link"></i>Danh sách đơn vị
                </div>
            </div>
            <div class="portlet-body">
                <input type="text" value="" style="box-shadow:inset 0 0 4px #eee; width:120px; margin:0; padding:6px 12px; border-radius:4px; border:1px solid silver; font-size:1.1em;" id="demo_q" placeholder="Tìm kiếm" />
                <div class="pull-right" style="margin-bottom:10px;">
                    @if(canCreate)
                    { 
                    <button id="create_new" class="btn green">
                        <i class="fa fa-plus"></i> Nhập đơn vị mới
                    </button>
                    }
                </div>
                <div style="clear:both;"></div>
                <div id="tree_4" class="tree-demo">
                </div>
            </div>
        </div>
    </div>
    <div class="col-md-6">
        <div class="portlet green-meadow box">
            <div class="portlet-title">
                <div class="caption">
                    <i class="fa fa-cogs"></i>Thêm mới/cập nhật đơn vị
                </div>
            </div>
            <div class="portlet-body form ">
                <div style="padding:30px;">Bấm chuột phải vào tên đơn vị để thao tác.</div>
            </div>
        </div>
    </div>
</div>

@section Styles{
    @Styles.Render("~/Content/adminv1/style")
}
@section Scripts {
    @Scripts.Render("~/bundles/adminv1/jstree")
}
@section Scripts2 {
    <script type="text/javascript">
        var UITree = function () {
            var ajaxTreeSample = function () {
                $("#tree_4").jstree({
                    "core": {
                        "themes": {
                            "responsive": true
                        },
                        "multiple": false,
                        "check_callback": true,
                        'data': {
                            'url': function (node) {
                                return '@Url.RouteUrl("OrganizationGetOrganizationJson")';
                            },
                            'data': function (node) {
                                return { 'parent': node.id };
                            }
                        }
                    },
                    "types": {
                        "default": {
                            "icon": "fa fa-folder icon-lg icon-state-success"
                        },
                        "file": {
                            "icon": "fa fa-folder icon-lg icon-state-success"
                        }
                    },
                    'plugins': ["wholerow", "types", "contextmenu", "search", "dnd"],
                });

            }
            return {
                init: function () {
                    ajaxTreeSample();
                }
            };
        }();
        function demo_create() {
            var ref = $('#tree_4').jstree(true),
                sel = ref.get_selected();
            if (!sel.length) {
                $("#tree_4").jstree('create_node', '#', { 'id': 'node_0', 'text': 'Tên đơn vị' }, 'last');
                sel = '#node_0';
            }
            else {
                sel = sel[0];
                sel = ref.create_node(sel, { "type": "folder", 'text': 'Tên đơn vị', 'id': 'node_0' });
            }
            if (sel) {
                ref.edit(sel);
            }
        };
        var to = false;
        $('#demo_q').keyup(function () {
            if (to) { clearTimeout(to); }
            to = setTimeout(function () {
                var v = $('#demo_q').val().trim();
                $('#tree_4').jstree(true).search(v);
            }, 250);
        });
        jQuery(document).ready(function () {
            UITree.init();
            $('#tree_4')
                .bind("rename_node.jstree", function (e, data) {
                    var node = $.extend(true, {}, data.node);
                    var tmp = node.id.split('_');
                    if (tmp[0] == 'j1')
                        node.id = 0;
                    else
                        node.id = tmp[1];
                    node.name = node.text;
                    if (data.node.parent != '#')
                        node.OrganizationId = data.node.parent.split('_')[1];
                    AdminVersionOne.blockUI({
                        message: 'Vui lòng đợi!',
                        overlayColor: 'none',
                        cenrerY: true,
                        boxed: true
                    });
                    $.ajax({
                        url: "@Url.RouteUrl("OrganizationCreateOrUpdate")",
                        data: JSON.stringify(node),
                        type: 'POST',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (result) {
                            if (result.success) {
                                showNoty('Đã ghi nhận thành công!', 'success', 'center', 5000);
                                data.instance.set_id(data.node, 'node_' + result.id);
                                var tree = $('#tree_4').jstree(true);
                                tree.refresh_node(data.node.parent);
                            }
                            else {
                                showNoty(result.message, 'error', 'center', 5000);
                                var tree = $('#tree_4').jstree(true);
                                tree.refresh_node(data.node.parent);
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            showNoty(errorThrown, 'error', 'center', 5000);
                            var tree = $('#tree_4').jstree(true);
                            tree.refresh_node(data.node.parent);
                        },
                        complete: function (result) {
                            AdminVersionOne.unblockUI();
                        }
                    });
                })
            .bind("delete_node.jstree", function (e, data) {
                var node = data.node;
                var tmp = node.id.split('_');
                var id = tmp[1];
                AdminVersionOne.blockUI({
                    message: 'Vui lòng đợi!',
                    overlayColor: 'none',
                    cenrerY: true,
                    boxed: true
                });
                $.ajax({
                    url: "@Url.RouteUrl("OrganizationDelete")",
                    data: { id: id },
                    type: 'POST',
                    dataType: 'json',
                    success: function (result) {
                        if (result.success) {
                            showNoty('Đã xóa đơn vị thành công!', 'success', 'center', 5000);
                        }
                        else {
                            showNoty(result.message, 'error', 'center', 5000);
                            var tree = $('#tree_4').jstree(true);
                            tree.refresh();
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        showNoty(errorThrown, 'error', 'center', 5000);
                        var tree = $('#tree_4').jstree(true);
                        tree.refresh();
                    },
                    complete: function (result) {
                        AdminVersionOne.unblockUI();
                    }
                });
            })
            .bind("move_node.jstree", function (e, data) {
                var node = data.node;
                var tmp = node.id.split('_');
                var id = tmp[1];
                var parent = data.node.parent.split('_')[1];
                AdminVersionOne.blockUI({
                    message: 'Vui lòng đợi!',
                    overlayColor: 'none',
                    cenrerY: true,
                    boxed: true
                });
                $.ajax({
                    url: "@Url.RouteUrl("OrganizationChangeParent")",
                    data: { id: id, organizationId: parent },
                    type: 'POST',
                    dataType: 'json',
                    success: function (result) {
                        if (result.success) {
                            showNoty('Đã thay đổi thành công!', 'success', 'center', 5000);
                        }
                        else {
                            showNoty(result.message, 'error', 'center', 5000);
                            var tree = $('#tree_4').jstree(true);
                            tree.refresh();
                        }
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        showNoty(errorThrown, 'error', 'center', 5000);
                        var tree = $('#tree_4').jstree(true);
                        tree.refresh();
                    },
                    complete: function (result) {
                        AdminVersionOne.unblockUI();
                    }
                });
            })
                .bind("copy_node.jstree", function (e, data) {
                    var node = $.extend(true, {}, data.node);
                    node.id = 0;
                    node.name = node.text;
                    if (data.node.parent != '#')
                        node.OrganizationId = data.node.parent.split('_')[1];
                    AdminVersionOne.blockUI({
                        message: 'Vui lòng đợi!',
                        overlayColor: 'none',
                        cenrerY: true,
                        boxed: true
                    });
                    $.ajax({
                        url: "@Url.RouteUrl("OrganizationCreateOrUpdate")",
                        data: JSON.stringify(node),
                        type: 'POST',
                        dataType: 'json',
                        contentType: 'application/json; charset=utf-8',
                        success: function (result) {
                            if (result.success) {
                                showNoty('Đã ghi nhận thành công!', 'success', 'center', 5000);
                                data.instance.set_id(data.node, 'node_' + result.id);
                            }
                            else {
                                showNoty(result.message, 'error', 'center', 5000);
                                var tree = $('#tree_4').jstree(true);
                                tree.refresh();
                            }
                        },
                        error: function (jqXHR, textStatus, errorThrown) {
                            showNoty(errorThrown, 'error', 'center', 5000);
                            var tree = $('#tree_4').jstree(true);
                            tree.refresh();
                        },
                        complete: function (result) {
                            AdminVersionOne.unblockUI();
                        }
                    });
                });
            //Hủy chọn 1 node nếu được bấm 2 lần
            var _selectedNodeId;
            $("#tree_4").on("select_node.jstree", function (e, _data) {
                if (_selectedNodeId === _data.node.id) {
                    _data.instance.deselect_node(_data.node);
                    _selectedNodeId = "";
                } else {
                    _selectedNodeId = _data.node.id;
                }
            }).jstree();
            $(document).on('click', '#create_new', function () {
                demo_create();
            });
            $(document).on('click', '#btn_delete', function (e) {
                e.preventDefault();
                var $id = $('#action_area #Id').val();
                if ($id == 0) {
                    return;
                }
                AdminVersionOne.blockUI({
                    message: 'Vui lòng đợi!',
                    overlayColor: 'none',
                    cenrerY: true,
                    boxed: true
                });
                var $url = '@Url.RouteUrl("CategoryDelete")';

                $.ajax({
                    type: 'POST',
                    cache: false,
                    async: true,
                    url: $url,
                    data: { id: $id },
                    dataType: 'json',
                    success: function (result) {
                        if (result.success) {
                            showNoty(result.message, 'success', 'center', 5000);
                            if ($id != 0) {
                                var currentNode = 'node_' + $id;
                                $('#tree_4').jstree(true).delete_node(currentNode);

                            }
                            $('#action_area').html($('.default-message').html());
                        }
                        else
                            showNoty(result.message, 'error', 'center', 5000);
                    },
                    error: function (jqXHR, textStatus, errorThrown) {
                        showNoty(errorThrown, 'error', 'center', 5000);
                    },
                    complete: function (result) {
                        AdminVersionOne.unblockUI();
                    }
                });
                return;
            });
        });
    </script>
}